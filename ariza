const database = 'Toti';
const collection = 'Ariza';

// The current database to use.
use(database);

// Create a new collection.
db.createCollection(collection);

use ("Ariza")

//1 - Crie uma coleção chamada Filmes que contenha os seguintes campos:

//inserçao na coleçao
db.filmes.insertMany(
  [
  {nome: "Duna",  diretor: "Denis Villeuneve", elenco: "Timothée Chalamet, Rebecca Ferguson, Zendaya", ano: 2021, premios: 0},
  {nome: "Central do Brasil", diretor: "Walter Salles", elenco: "Fernanda Montenegro, Vinicius de Oliveira", ano: 1998, premios: 20},
  {nome: "Cidade dos Sonhos", diretor: "David Lynch", elenco: "Naomi Watts, Laura Elena Harring", ano: 2001, premios: 18},
  {nome: "King Kong", diretor: "Peter Jackson", elenco: "Naomi Watts, Jack Black, Adrien Brody", ano: 2005, premios: 10},
  {nome: "Bela Vingança", diretor: "Emerald Fennel", elenco: "Carey Mulligan, Bo Burnham", ano: 2020, premios: 22},
  {nome: "SDA: A Sociedade do Anel", diretor: "Peter Jackson", elenco: "Elijah Wood, Ian McKellen, Liv Tyler", ano: 2001, premios: 15},
  {nome: "Shrek", diretor: "Andrew Adamson", elenco: "Vicky Jenson,Mike Myers, Eddie Murphy, Cameron Diaz", ano: 2001, premios: 10},
  {nome: "Cidade de Deus", diretor: "Fernando Meirelles", elenco: "Kátia Luind, Alexandre Rodrigues, Leandro Firmino da Hora", ano: 2002, premios: 15},
  {nome: "Pânico", diretor: "Wes Craven", elenco: "Neve Campbell, Courtney Cox, David Arquette", ano: 1996, premios: 6}
]
);

use ("Ariza")
db.filmes.find()


//2 - Busque filmes lançados entre 1997 e 2004.
use("Ariza")
db.filmes.find(
    {$and:
        [
            {ano:{$gte:1997}},
            {ano:{$lte:2004}}
        ]
    },
{nome:1, diretor:1, elenco:1, ano:1, premios:1, _id:0},
)


//3 - Busque filmes de 2001 ou que comecem com a letra D.
use("Ariza")
db.filmes.find(
    {$or:
    [
        {ano:2001},
        {nome:{"$regex":"^D"}}
    ]
},
{nome:1, diretor:1, elenco:1, ano:1, premios:1, _id:0},
)


//4 - Busque filmes lançados dirigidos pelo Peter Jackson ou pelo Walter Salles usando $in.
use("Ariza")
db.filmes.find(
    {$or:
        [
            {diretor:{$in:["Peter Jackson","Walter Salles"]}}
        ],
    },
{nome:1, diretor:1, ano:1, _id:0},
)

  
//5 - Busque filmes lançados entre 2002 e 2021 e que contenham as atrizes Naomi Watts ou Carey Mulligan.
use ("Ariza")
db.filmes.find(
    {$and:
        [
            {elenco:{$in:["Naomi Watts","Carey Mulligan"]}},
            {ano: {$gte:2002}},
            {ano: {$lte:2021}}
        ]
    },
{ nome: 1, ano: 1, elenco: 1, _id: 0 }
)

//6 - Busque todos os filmes que não sejam entre 2001 e 2005.
use("Ariza")
db.filmes.find(
    {$and:
        [
            {ano:{$not:{$gte:2001, $lte:2005}}}
        ]
    },
{nome:1, diretor:1, elenco:1, ano:1, premios:1, _id:0}
)


//7 - Conte quantos filmes foram lançados em 2001.
use("Ariza")
db.filmes.find(
    {ano:2001},
{nome:1, diretor:1, elenco:1, ano:1, premios:1, _id:0}
    ).count()


//8 - Selecione apenas o elenco numa distinct.
use("Ariza")
db.filmes.findOne(
    {nome:"Central do Brasil"},
{elenco:1, _id:0},
    )


//9- Selecione os filmes lançados em 2001, apresentando seu nome e diretor apenas, em ordem decrescente,limitando a dois resultados.
use("Ariza")
db.filmes.find(
    {ano:2001},
{nome:1, diretor:1, _id:0}
    ).limit(2).sort({nome:-1})


//10 - Crie uma index usando o ano como referência.
use("Ariza")
db.filmes.createIndex({ano: "text", nome:"text"})

use("Ariza")
db.filmes.find({$text:{$search:"Duna"}})


//11 - Some os prêmios de todos os filmes.
use("Ariza")
db.filmes.aggregate(
    [
       {$group: {
        _id: "$total",
        soma: { $sum: "$premios" }
        }
        }
    ]
 )


//12 - Na coleção `sample_mflix` do Mongo Atlas DB, crie uma consulta que retorne os filmes com os seus comentários utilizando o estágio de agrupamento (e.g.: `$lookup`).
use("sample_mflix")
db.movies.aggregate([
       {
        $lookup: 
        {
            from:"movies", 
            localField:"nome", foreignField:"title", 
            as:"dados"}}])
